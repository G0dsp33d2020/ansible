# dynatrace oneagent install on windows
# hosts_group -> inventory group of hosts to execute playbook on
# dt_api_endpoint -> dynatrace environment api endpoint (include trailing /)
# dt_api_token -> dynatrace api install token
# dt_host_group: -> dynatrace host group name
# dt_app_log_content_access: -> flag to enable or disable log analytics on host (0 or 1)
# dt_infra_only: -> flag to set cloud infrastructure monitoring mode on host (0 or 1)
# dt_product_id: -> (optional) if set, overrides the msi product id in the playbook
---
-
  hosts: "{{ hosts_group }}"
  name: "dynatrace oneagent install on windows"
  tasks:
    -
      name: "specify dynatrace msi product id if not set"
      set_stats:
        data:
          dt_product_id: '{9257BAF1-3E45-42F9-BBB5-48D5DDD98105}'
      #when: dt_product_id is undefined
    -
      name: "validate ansible tower execution on windows"
      win_stat:
        path: C:\Temp
      register: temp_dir
    -
      name: "check if oneagent is already installed via windows service registry key"
      win_reg_stat:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\Dynatrace OneAgent
        name: DisplayName
      register: installed
    -
      name: "download oneagent install file"
      win_get_url:
        url: "{{ dt_api_endpoint }}deployment/installer/agent/windows/default/latest?Api-Token={{ dt_api_token }}&arch=x86&flavor=default"
        dest: C:\Temp\dynatrace-oneagent-windows-latest.exe
    -
      name: "install: execute oneagent install file"
      win_package:
        product_id: "{{ dt_product_id }}"
        path: C:\Temp\dynatrace-oneagent-windows-latest.exe
        arguments:
        - HOST_GROUP="{{ dt_host_group }}"
        - APP_LOG_CONTENT_ACCESS="{{ dt_app_log_content_access }}"
        - INFRA_ONLY="{{ dt_infra_only }}"
        state: present
      when: installed.exists == False
    -
      name: "update: validate existing oneagent product id exists"
      win_reg_stat:
        path: "HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{{ dt_product_id }}"
        name: DisplayName
      register: uninstall
    -
      name: "update: uninstall existing oneagent package"
      win_package:
        product_id: "{{ dt_product_id }}"
        state: absent
      when: installed.exists == True and uninstall.exists == True
    -
      name: "update: execute oneagent install file"
      win_package:
        path: C:\Temp\dynatrace-oneagent-windows-latest.exe
        product_id: "{{ dt_product_id }}"
        arguments:
        - HOST_GROUP="{{ dt_host_group }}"
        - APP_LOG_CONTENT_ACCESS="{{ dt_app_log_content_access }}"
        - INFRA_ONLY="{{ dt_infra_only }}"
        state: present
      when: installed.exists == True and uninstall.exists == True
